{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"../utils/uuid","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[3], \"react-native\");\n\n  var _uuid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../utils/uuid\"));\n\n  var RNFetchBlob = _reactNative.NativeModules.RNFetchBlob;\n  var emitter = _reactNative.DeviceEventEmitter;\n\n  var RNFetchBlobReadStream = function () {\n    function RNFetchBlobReadStream(path, encoding, bufferSize, tick) {\n      var _this = this;\n\n      (0, _classCallCheck2.default)(this, RNFetchBlobReadStream);\n      this.tick = 10;\n      if (!path) throw Error('RNFetchBlob could not open file stream with empty `path`');\n      this.encoding = encoding || 'utf8';\n      this.bufferSize = bufferSize;\n      this.path = path;\n      this.closed = false;\n      this.tick = tick;\n\n      this._onData = function () {};\n\n      this._onEnd = function () {};\n\n      this._onError = function () {};\n\n      this.streamId = 'RNFBRS' + (0, _uuid.default)();\n      var subscription = emitter.addListener(this.streamId, function (e) {\n        var event = e.event,\n            code = e.code,\n            detail = e.detail;\n\n        if (_this._onData && event === 'data') {\n          _this._onData(detail);\n\n          return;\n        } else if (_this._onEnd && event === 'end') {\n          _this._onEnd(detail);\n        } else {\n          var err = new Error(detail);\n          err.code = code || 'EUNSPECIFIED';\n          if (_this._onError) _this._onError(err);else throw err;\n        }\n\n        if (event === 'error' || event === 'end') {\n          subscription.remove();\n          _this.closed = true;\n        }\n      });\n    }\n\n    (0, _createClass2.default)(RNFetchBlobReadStream, [{\n      key: \"open\",\n      value: function open() {\n        if (!this.closed) RNFetchBlob.readStream(this.path, this.encoding, this.bufferSize || 10240, this.tick || -1, this.streamId);else throw new Error('Stream closed');\n      }\n    }, {\n      key: \"onData\",\n      value: function onData(fn) {\n        this._onData = fn;\n      }\n    }, {\n      key: \"onError\",\n      value: function onError(fn) {\n        this._onError = fn;\n      }\n    }, {\n      key: \"onEnd\",\n      value: function onEnd(fn) {\n        this._onEnd = fn;\n      }\n    }]);\n    return RNFetchBlobReadStream;\n  }();\n\n  exports.default = RNFetchBlobReadStream;\n});","map":[[13,0,5,0],[15,0,10,0],[17,0,12,0],[17,6,12,6,"RNFetchBlob"],[17,17,12,17],[17,20,12,20,"NativeModules"],[17,47,12,34,"RNFetchBlob"],[17,58,12,0],[18,0,13,0],[18,6,13,6,"emitter"],[18,13,13,13],[18,16,13,16,"DeviceEventEmitter"],[18,47,13,0],[20,6,15,21,"RNFetchBlobReadStream"],[20,27],[21,0,23,2],[21,35,23,14,"path"],[21,39,23,2],[21,41,23,27,"encoding"],[21,49,23,2],[21,51,23,44,"bufferSize"],[21,61,23,2],[21,63,23,65,"tick"],[21,67,23,2],[21,69,23,78],[22,0,23,78],[24,0,23,78],[25,0,23,78],[25,11,21,2,"tick"],[25,15,23,78],[25,18,21,18],[25,20,23,78],[26,0,24,4],[26,10,24,7],[26,11,24,8,"path"],[26,15,24,4],[26,17,25,6],[26,23,25,12,"Error"],[26,28,25,17],[26,29,25,18],[26,87,25,17],[26,88,25,6],[27,0,26,4],[27,11,26,9,"encoding"],[27,19,26,4],[27,22,26,20,"encoding"],[27,30,26,28],[27,34,26,32],[27,40,26,4],[28,0,27,4],[28,11,27,9,"bufferSize"],[28,21,27,4],[28,24,27,22,"bufferSize"],[28,34,27,4],[29,0,28,4],[29,11,28,9,"path"],[29,15,28,4],[29,18,28,16,"path"],[29,22,28,4],[30,0,29,4],[30,11,29,9,"closed"],[30,17,29,4],[30,20,29,18],[30,25,29,4],[31,0,30,4],[31,11,30,9,"tick"],[31,15,30,4],[31,18,30,16,"tick"],[31,22,30,4],[33,0,31,4],[33,11,31,9,"_onData"],[33,18,31,4],[33,21,31,19],[33,33,31,25],[33,34,31,27],[33,35,31,4],[35,0,32,4],[35,11,32,9,"_onEnd"],[35,17,32,4],[35,20,32,18],[35,32,32,24],[35,33,32,26],[35,34,32,4],[37,0,33,4],[37,11,33,9,"_onError"],[37,19,33,4],[37,22,33,20],[37,34,33,26],[37,35,33,28],[37,36,33,4],[39,0,34,4],[39,11,34,9,"streamId"],[39,19,34,4],[39,22,34,20],[39,33,34,30],[39,53,34,4],[40,0,37,4],[40,10,37,8,"subscription"],[40,22,37,20],[40,25,37,23,"emitter"],[40,32,37,30],[40,33,37,31,"addListener"],[40,44,37,23],[40,45,37,43],[40,50,37,48,"streamId"],[40,58,37,23],[40,60,37,58],[40,70,37,59,"e"],[40,71,37,58],[40,73,37,65],[41,0,37,65],[41,12,38,11,"event"],[41,17,37,65],[41,20,38,34,"e"],[41,21,37,65],[41,22,38,11,"event"],[41,27,37,65],[42,0,37,65],[42,12,38,18,"code"],[42,16,37,65],[42,19,38,34,"e"],[42,20,37,65],[42,21,38,18,"code"],[42,25,37,65],[43,0,37,65],[43,12,38,24,"detail"],[43,18,37,65],[43,21,38,34,"e"],[43,22,37,65],[43,23,38,24,"detail"],[43,29,37,65],[45,0,39,6],[45,12,39,9],[45,17,39,13],[45,18,39,14,"_onData"],[45,25,39,9],[45,29,39,25,"event"],[45,34,39,30],[45,39,39,35],[45,45,39,6],[45,47,39,43],[46,0,40,8],[46,10,40,8],[46,15,40,12],[46,16,40,13,"_onData"],[46,23,40,8],[46,24,40,21,"detail"],[46,30,40,8],[48,0,41,8],[49,0,42,7],[49,9,39,6],[49,15,43,11],[49,19,43,15],[49,24,43,19],[49,25,43,20,"_onEnd"],[49,31,43,15],[49,35,43,30,"event"],[49,40,43,35],[49,45,43,40],[49,50,43,11],[49,52,43,47],[50,0,44,8],[50,10,44,8],[50,15,44,12],[50,16,44,13,"_onEnd"],[50,22,44,8],[50,23,44,20,"detail"],[50,29,44,8],[51,0,45,7],[51,9,43,11],[51,15,46,11],[52,0,47,8],[52,14,47,14,"err"],[52,17,47,17],[52,20,47,20],[52,24,47,24,"Error"],[52,29,47,20],[52,30,47,30,"detail"],[52,36,47,20],[52,37,47,8],[53,0,48,8,"err"],[53,10,48,8,"err"],[53,13,48,11],[53,14,48,12,"code"],[53,18,48,8],[53,21,48,19,"code"],[53,25,48,23],[53,29,48,27],[53,43,48,8],[54,0,49,8],[54,14,49,11],[54,19,49,15],[54,20,49,16,"_onError"],[54,28,49,8],[54,30,50,10],[54,35,50,14],[54,36,50,15,"_onError"],[54,44,50,10],[54,45,50,24,"err"],[54,48,50,10],[54,50,49,8],[54,55,52,10],[54,61,52,16,"err"],[54,64,52,10],[55,0,53,7],[57,0,55,6],[57,12,55,10,"event"],[57,17,55,15],[57,22,55,20],[57,29,55,10],[57,33,55,31,"event"],[57,38,55,36],[57,43,55,41],[57,48,55,6],[57,50,55,48],[58,0,56,8,"subscription"],[58,10,56,8,"subscription"],[58,22,56,20],[58,23,56,21,"remove"],[58,29,56,8],[59,0,57,8],[59,10,57,8],[59,15,57,12],[59,16,57,13,"closed"],[59,22,57,8],[59,25,57,22],[59,29,57,8],[60,0,58,7],[61,0,59,5],[61,7,37,23],[61,8,37,4],[62,0,61,3],[66,29,63,9],[67,0,64,4],[67,12,64,7],[67,13,64,8],[67,18,64,13,"closed"],[67,24,64,4],[67,26,65,6,"RNFetchBlob"],[67,37,65,17],[67,38,65,18,"readStream"],[67,48,65,6],[67,49,65,29],[67,54,65,34,"path"],[67,58,65,6],[67,60,65,40],[67,65,65,45,"encoding"],[67,73,65,6],[67,75,65,55],[67,80,65,60,"bufferSize"],[67,90,65,55],[67,94,65,74],[67,99,65,6],[67,101,65,82],[67,106,65,87,"tick"],[67,110,65,82],[67,114,65,95],[67,115,65,96],[67,116,65,6],[67,118,65,99],[67,123,65,104,"streamId"],[67,131,65,6],[67,133,64,4],[67,138,67,6],[67,144,67,12],[67,148,67,16,"Error"],[67,153,67,12],[67,154,67,22],[67,169,67,12],[67,170,67,6],[68,0,68,3],[71,29,70,9,"fn"],[71,31],[71,33,70,24],[72,0,71,4],[72,13,71,9,"_onData"],[72,20,71,4],[72,23,71,19,"fn"],[72,25,71,4],[73,0,72,3],[76,30,74,10,"fn"],[76,32],[76,34,74,14],[77,0,75,4],[77,13,75,9,"_onError"],[77,21,75,4],[77,24,75,20,"fn"],[77,26,75,4],[78,0,76,3],[81,28,78,9,"fn"],[81,30],[81,32,78,13],[82,0,79,4],[82,13,79,9,"_onEnd"],[82,19,79,4],[82,22,79,18,"fn"],[82,24,79,4],[83,0,80,3]]},"type":"js/module"}]}